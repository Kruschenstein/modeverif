/*
** Q1 := true;                          Q2 := true;
** TURN := 1;                           TURN := 2;
** wait until not Q2 or TURN = 2;       wait until not Q1 or TURN = 1;
** Critical Section;                    Critical Section;
** Q1 := false                          Q2 := false;
*/

load variable.mso;;
load bool.mso;;

Proc = [setBool, setVar, wait, critic, end]
{
    etat = 5;
    init = 0;

    0 = setBool;
    1 = setVar;
    2 = wait;
    3 = critic;
    4 = end;

    0 -> 1 [goSetVar];
    1 -> 2 [goWait];
    2 -> 3 [goCritic];
    3 -> 0 [loop];
    0 -> 4 [goEnd];
};;

system = <Proc p0, Proc p1, Bool Q1, Bool Q2, Var TURN>
{
    <goSetVar, _, setTrue, _, _>    -> p0_set_Q1_True;
    <_, goSetVar, _, setTrue, _>    -> p1_set_Q2_True;
    <goWait, _, _, _, set1>         -> p0_set_TURN_1;
    <_, goWait, _, _, set2>         -> p1_set_TURN_2;
    <goCritic, _, _, isFalse, _>    -> p0_unlock;
    <goCritic, _, _, _, is2>        -> p0_unlock;
    <_, goCritic, isFalse, _, _>  -> p1_unlock;
    <_, goCritic, _, _, is1>        -> p1_unlock;
    <loop, _, setFalse, _, _>       -> p0_set_Q1_False;
    <_, loop, _, setFalse, _>       -> p1_set_Q2_False;
    <goEnd, _, _, _, _>             -> p0_finish;
    <_, goEnd, _, _, _>             -> p1_finish;
};;

todot simple_sol.dot system;;